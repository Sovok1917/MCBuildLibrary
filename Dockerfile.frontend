# File: MCBuildLibrary/Dockerfile.frontend

# ---- Build Stage ----
FROM node:20-alpine AS builder
LABEL stage=builder

WORKDIR /app

# Copy package.json and package-lock.json (or yarn.lock) from the frontend subdirectory
COPY frontend/package.json frontend/package-lock.json* frontend/yarn.lock* ./
# If yarn.lock exists, it will use yarn, otherwise npm
RUN if [ -f yarn.lock ]; then yarn install --frozen-lockfile; else npm ci; fi

# Copy the rest of the frontend application source code from the frontend subdirectory
COPY frontend/ ./

# Build the React application
RUN npm run build # Or yarn build, if you use yarn

# ---- Serve Stage ----
FROM nginx:1.25-alpine

# Remove default Nginx configuration
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom Nginx configuration (from project root, where this Dockerfile is)
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy the built static files from the builder stage to Nginx's web root
COPY --from=builder /app/dist /usr/share/nginx/html

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]