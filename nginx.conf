# File: MCBuildLibrary/nginx.conf
server {
    listen 80;
    server_name localhost;

    root /usr/share/nginx/html;
    index index.html index.htm;

    # Serve static files first, then try to serve /index.html for client-side routing
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Proxy requests for backend operations (excluding static assets and specific auth paths)
    # This will now catch /builds, /authors, /users/me, etc.
    # We need to be careful not to catch static asset paths here.
    # A more specific prefix might be better if you have non-API backend paths.
    # For now, let's assume all non-static, non-auth paths starting with / are for the backend.
    # This is a broad catch-all. If you have other root paths served by Nginx,
    # you'll need more specific location blocks.

    # Example: If all your backend paths are under /api/ in Spring (even if you want to remove it in nginx)
    # then the original nginx config was better.
    # If your Spring controllers are at /builds, /authors, then this is a starting point.

    # Proxy for /builds
    location /builds {
        proxy_pass http://backend:8080; # Path /builds is passed as is
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }

    # Proxy for /authors
    location /authors {
        proxy_pass http://backend:8080; # Path /authors is passed as is
        # ... (same proxy headers as above)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for /themes
    location /themes {
        proxy_pass http://backend:8080; # Path /themes is passed as is
        # ... (same proxy headers as above)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for /colors
    location /colors {
        proxy_pass http://backend:8080; # Path /colors is passed as is
        # ... (same proxy headers as above)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for /users (e.g. /users/me)
    location /users/ { # Trailing slash is important here for prefix matching
        proxy_pass http://backend:8080; # Path /users/ is passed as is
        # ... (same proxy headers as above)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Proxy for /bulk operations
    location /bulk/ { # Trailing slash for prefix matching
        proxy_pass http://backend:8080; # Path /bulk/ is passed as is
        # ... (same proxy headers as above)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Specific auth paths (no /api prefix)
    location = /login {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location = /logout {
        proxy_pass http://backend:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Add any other specific backend paths here if they don't fall under the general categories above

    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}