# File: frontend/Dockerfile.frontend

# ---- Build Stage ----
FROM node:20-alpine AS build

WORKDIR /app

# Copy package.json and package-lock.json (or yarn.lock)
COPY package.json ./
# If you have a package-lock.json, uncomment the next line
COPY package-lock.json ./
# If you use yarn, copy yarn.lock instead
# COPY yarn.lock ./

# Install dependencies
RUN npm install
# If you use yarn, use:
# RUN yarn install

# Copy the rest of the application code
COPY . .

# Build the application
RUN npm run build
# If you use yarn, use:
# RUN yarn build

# ---- Serve Stage ----
FROM nginx:1.25-alpine

# Remove default Nginx configuration
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy the built static files from the build stage to Nginx's web root
COPY --from=build /app/dist /usr/share/nginx/html

# Expose port 80 (Nginx default)
EXPOSE 80

# Start Nginx
CMD ["nginx", "-g", "daemon off;"]